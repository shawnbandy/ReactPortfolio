{"version":3,"file":"static/js/521.95ec27a3.chunk.js","mappings":"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","sources":["components/GameComponents/fight.js"],"sourcesContent":["const canvas = document.getElementById('canvas');\nconst p1hp = document.getElementById('p1hp');\nconst p2hp = document.getElementById('p2hp');\nconst main = document.getElementById('main');\nconst c = canvas.getContext('2d');\n\n/*\n    TODO: add character classes\n    TODO: move character to different .js file and import it instead\n    TODO: add blocking \n    TODO: game over screen\n    TODO: character collision, to prevent them from going inside of each other\n*/\n\ncanvas.height = 576;\ncanvas.width = 1076;\n\nconst gravity = 0.2;\n\n//*x and y are coordinates where the character is on the canvas\nclass Character {\n  constructor({ x, y, color, width, height, velocity, hp }) {\n    this.x = x;\n    this.y = y;\n    this.color = color;\n    this.height = height;\n    this.width = width;\n    this.velocity = velocity;\n    this.hp = hp;\n  }\n\n  //*redraws the character\n  render() {\n    c.fillStyle = this.color;\n    c.fillRect(this.x, this.y, this.width, this.height);\n  }\n\n  //*this will rerender the player with any changes in velocity\n  update() {\n    this.render();\n\n    this.y += this.velocity.y;\n    this.x += this.velocity.x;\n\n    //*checks the player to make sure they're not going out of bounds. May refactor into a function for clarity\n    if (this.x + this.width + this.velocity.x > canvas.width) {\n      this.velocity.x = 0;\n      this.x = canvas.width - this.width;\n    } else {\n      this.x += this.velocity.x;\n    }\n\n    //*left side\n    if (this.x - this.velocity.x < 0) {\n      console.log(true);\n      this.velocity.x = 0;\n      this.x = 0;\n    }\n\n    // //*floor\n    if (this.y + this.height + this.velocity.y > canvas.height) {\n      this.velocity.y = 0;\n    } else {\n      this.velocity.y += gravity;\n    }\n  }\n\n  //*creates a rectangle attached to the character. attacking will pause player movement (intentional)\n  //TODO figure out if the attack rectangle collides/overlaps with the enemy character\n  attack() {\n    //*air attack, which is a downwards strike, if character is NOT on the floor. otherwise regular strike\n    //*will need to change this since I reference char2 in a class. maybe the attack box is made outside character class?\n    if (char1.y < 426 && char2.x > this.x + this.width) {\n      c.fillStyle = 'pink';\n      c.fillRect(\n        this.x + this.width,\n        this.y + this.height / 1.5,\n        this.width / 4,\n        this.height / 1.3\n      );\n    } else if (char1.y > 426 && char2.x > this.x + this.width) {\n      char1.velocity.x = 0;\n      c.fillStyle = 'pink';\n      c.fillRect(\n        this.x + this.width,\n        this.y + this.height / 2.5,\n        this.width,\n        this.height / 3\n      );\n    } else if (char1.y < 426 && char2.x < this.x + this.width) {\n      c.fillStyle = 'pink';\n      c.fillRect(\n        this.x,\n        this.y + this.height / 1.5,\n        this.width / -4,\n        this.height / 1.3\n      );\n    } else if (char1.y > 426 && char2.x > this.x + this.width) {\n      char1.velocity.x = 0;\n      c.fillStyle = 'pink';\n      c.fillRect(\n        this.x,\n        this.y + this.height / 2.5,\n        this.width,\n        this.height / 3\n      );\n      c.fillRect();\n    }\n  }\n}\n\nconst char1 = new Character({\n  x: 160,\n  y: 426,\n  color: 'blue',\n  width: 100,\n  height: 150,\n  velocity: {\n    x: 0,\n    y: 0,\n  },\n  hp: 100,\n});\n\nconst char2 = new Character({\n  x: 807,\n  y: 426,\n  color: 'green',\n  width: 100,\n  height: 150,\n  velocity: {\n    x: 0,\n    y: 0,\n  },\n  hp: 100,\n});\n\n//*listens for specific movement keys, which will affect movement\nwindow.addEventListener('keydown', (e) => {\n  console.log(e.key);\n  switch (e.key) {\n    case 'a':\n      keyPressed.a.pressed = true;\n      break;\n    case 'd':\n      keyPressed.d.pressed = true;\n      break;\n    case 'w':\n      if (char1.velocity.y == 0) {\n        char1.velocity.y = -10;\n      }\n      break;\n    case 'x':\n      keyPressed.x.pressed = true;\n      break;\n  }\n});\n\n//*listens for when the movement key is released, which switches the movement off\nwindow.addEventListener('keyup', (e) => {\n  console.log(e.key);\n  switch (e.key) {\n    case 'a':\n      keyPressed.a.pressed = false;\n      break;\n    case 'd':\n      keyPressed.d.pressed = false;\n      break;\n    case 'w':\n      keyPressed.w.pressed = false;\n      break;\n    case 'x':\n      keyPressed.x.pressed = false;\n      break;\n  }\n});\n\n//*obj with keys to switch to true/false\nconst keyPressed = {\n  a: {\n    pressed: false,\n  },\n  s: {\n    pressed: false,\n  },\n  d: {\n    pressed: false,\n  },\n  w: {\n    pressed: false,\n  },\n  x: {\n    pressed: false,\n  },\n};\n\nfunction detectCollision(char1, char2) {\n  let collision = false;\n\n  if (\n    char1.x < char2.x + char2.width &&\n    char1.x + char1.width > char2.x &&\n    char1.y < char2.y + char2.height &&\n    char1.height + char1.y > char2.y\n  ) {\n    collision = true;\n  }\n\n  if (collision) {\n    char1.velocity.x = 0;\n  }\n  return collision;\n}\n\n/*\n *recursive function that updates the game state\n *starts by clearing the canvas, then redraws the characters\n *checks to see if a left/right movement key was pressed, and changes velocity depending on that\n *checks to see if an attack was pressed\n *updates the player HP\n */\n\nfunction updateGameStatus() {\n  window.requestAnimationFrame(updateGameStatus);\n  c.clearRect(0, 0, canvas.width, canvas.height);\n  let isCollision = detectCollision(char1, char2);\n  char1.update();\n  char2.update();\n\n  if (!isCollision) {\n    if (keyPressed.a.pressed) {\n      char1.velocity.x = -1;\n    } else if (keyPressed.d.pressed) {\n      char1.velocity.x = 2;\n    } else {\n      char1.velocity.x = 0;\n    }\n  }\n\n  //TODO, run collision detection to check for damage\n  if (keyPressed.x.pressed) {\n    char1.attack();\n  }\n  // p1hp.textContent = `P1 ${char1.hp}`;\n  // p2hp.textContent = `P2 ${char2.hp}`;\n}\n\nupdateGameStatus();\n"],"names":["canvas","document","getElementById","c","getContext","height","width","Character","x","y","color","velocity","hp","this","fillStyle","fillRect","render","console","log","char1","char2","window","addEventListener","e","key","keyPressed","a","pressed","d","w","s","updateGameStatus","requestAnimationFrame","clearRect","isCollision","collision","detectCollision","update","attack"],"sourceRoot":""}